apiVersion: apps/v1
kind: Deployment
metadata:
  name: warehouse-analytics
  labels:
    app: warehouse-analytics
    domain: warehousing
    tier: analytics
spec:
  replicas: 2
  selector:
    matchLabels:
      app: warehouse-analytics
  template:
    metadata:
      labels:
        app: warehouse-analytics
        domain: warehousing
        tier: analytics
    spec:
      serviceAccountName: warehouse-analytics
      containers:
      - name: warehouse-analytics
        image: exalt/warehouse-analytics:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8087
          name: http
          protocol: TCP
        - containerPort: 8097
          name: metrics
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: SERVER_PORT
          value: "8087"
        - name: MANAGEMENT_SERVER_PORT
          value: "8097"
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              name: analytics-db-secret
              key: url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: analytics-db-secret
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: analytics-db-secret
              key: password
        - name: SPRING_ELASTICSEARCH_URIS
          value: "http://elasticsearch:9200"
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-cluster-kafka-bootstrap:9092"
        - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
          value: "http://service-registry:8761/eureka/"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: metrics
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: metrics
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: logs
          mountPath: /var/log/warehouse-analytics
        - name: cache
          mountPath: /var/cache/analytics
      volumes:
      - name: config
        configMap:
          name: warehouse-analytics-config
      - name: logs
        emptyDir: {}
      - name: cache
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: warehouse-analytics
  labels:
    app: warehouse-analytics
    domain: warehousing
spec:
  type: ClusterIP
  selector:
    app: warehouse-analytics
  ports:
  - name: http
    port: 8087
    targetPort: 8087
    protocol: TCP
  - name: metrics
    port: 8097
    targetPort: 8097
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: warehouse-analytics
  labels:
    app: warehouse-analytics
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: warehouse-analytics-config
  labels:
    app: warehouse-analytics
data:
  application.yml: |
    spring:
      application:
        name: warehouse-analytics
      cloud:
        kubernetes:
          reload:
            enabled: true
            mode: event
            strategy: refresh
      jpa:
        hibernate:
          ddl-auto: validate
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            format_sql: true
      kafka:
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        consumer:
          group-id: warehouse-analytics
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          properties:
            spring.json.trusted.packages: "*"
      elasticsearch:
        connection-timeout: 5s
        socket-timeout: 30s
    
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      metrics:
        export:
          prometheus:
            enabled: true
        tags:
          application: ${spring.application.name}
      health:
        elasticsearch:
          enabled: true
    
    analytics:
      batch-size: 1000
      processing-interval: 60s
      retention-days: 90
      aggregation:
        enabled: true
        interval: 300s
      alerts:
        enabled: true
        threshold-check-interval: 60s
    
    logging:
      level:
        com.exalt.warehousing.analytics: DEBUG
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
apiVersion: apps/v1
kind: Deployment
metadata:
  name: warehouse-management-service
  labels:
    app: warehouse-management-service
    domain: warehousing
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: warehouse-management-service
  template:
    metadata:
      labels:
        app: warehouse-management-service
        domain: warehousing
        tier: backend
    spec:
      serviceAccountName: warehouse-management-service
      containers:
      - name: warehouse-management-service
        image: exalt/warehouse-management-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8086
          name: http
          protocol: TCP
        - containerPort: 8096
          name: metrics
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "kubernetes"
        - name: SERVER_PORT
          value: "8086"
        - name: MANAGEMENT_SERVER_PORT
          value: "8096"
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              name: warehouse-db-secret
              key: url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: warehouse-db-secret
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: warehouse-db-secret
              key: password
        - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-cluster-kafka-bootstrap:9092"
        - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
          value: "http://service-registry:8761/eureka/"
        - name: INVENTORY_SERVICE_URL
          value: "http://inventory-service:8082"
        - name: ORDER_SERVICE_URL
          value: "http://order-service:8080"
        resources:
          requests:
            memory: "768Mi"
            cpu: "400m"
          limits:
            memory: "1.5Gi"
            cpu: "800m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: metrics
          initialDelaySeconds: 45
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: logs
          mountPath: /var/log/warehouse-management
      volumes:
      - name: config
        configMap:
          name: warehouse-management-config
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: warehouse-management-service
  labels:
    app: warehouse-management-service
    domain: warehousing
spec:
  type: ClusterIP
  selector:
    app: warehouse-management-service
  ports:
  - name: http
    port: 8086
    targetPort: 8086
    protocol: TCP
  - name: metrics
    port: 8096
    targetPort: 8096
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: warehouse-management-service
  labels:
    app: warehouse-management-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: warehouse-management-config
  labels:
    app: warehouse-management-service
data:
  application.yml: |
    spring:
      application:
        name: warehouse-management-service
      cloud:
        kubernetes:
          reload:
            enabled: true
            mode: event
            strategy: refresh
      jpa:
        hibernate:
          ddl-auto: validate
        properties:
          hibernate:
            dialect: org.hibernate.dialect.PostgreSQLDialect
            format_sql: true
      kafka:
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        consumer:
          group-id: warehouse-management-service
          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
          value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
          properties:
            spring.json.trusted.packages: "*"
    
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      metrics:
        export:
          prometheus:
            enabled: true
        tags:
          application: ${spring.application.name}
    
    resilience4j:
      circuitbreaker:
        instances:
          inventory-service:
            registerHealthIndicator: true
            slidingWindowSize: 10
            minimumNumberOfCalls: 5
            permittedNumberOfCallsInHalfOpenState: 3
            automaticTransitionFromOpenToHalfOpenEnabled: true
            waitDurationInOpenState: 5s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
          order-service:
            registerHealthIndicator: true
            slidingWindowSize: 10
            minimumNumberOfCalls: 5
            permittedNumberOfCallsInHalfOpenState: 3
            automaticTransitionFromOpenToHalfOpenEnabled: true
            waitDurationInOpenState: 5s
            failureRateThreshold: 50
            eventConsumerBufferSize: 10
    
    logging:
      level:
        com.exalt.warehousing.management: DEBUG
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
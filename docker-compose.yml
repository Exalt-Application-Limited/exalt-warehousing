version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    container_name: warehousing-postgres
    environment:
      POSTGRES_DB: warehousing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_MULTIPLE_DATABASES: billing_service,warehouse_analytics,inventory_service,fulfillment_service,warehouse_management_service
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-multiple-db.sh:/docker-entrypoint-initdb.d/init-multiple-db.sh
    ports:
      - "5432:5432"
    networks:
      - warehousing-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: warehousing-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - warehousing-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Service Discovery
  eureka-server:
    image: springcloud/eureka:latest
    container_name: warehousing-eureka
    ports:
      - "8761:8761"
    networks:
      - warehousing-network
    environment:
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Core Warehousing Services
  warehousing-shared:
    build: ./warehousing-shared
    container_name: warehousing-shared-lib
    ports:
      - "8081:8080"
    networks:
      - warehousing-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  warehouse-management-service:
    build: ./warehouse-management-service
    container_name: warehousing-management-service
    ports:
      - "8082:8080"
    networks:
      - warehousing-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_NAME=warehouse_management_service
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
    depends_on:
      - eureka-server
      - postgres
      - redis
      - warehousing-shared
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  inventory-service:
    build: ./inventory-service
    container_name: warehousing-inventory-service
    ports:
      - "8083:8080"
    networks:
      - warehousing-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_NAME=inventory_service
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
    depends_on:
      - eureka-server
      - postgres
      - redis
      - warehouse-management-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  fulfillment-service:
    build: ./fulfillment-service
    container_name: warehousing-fulfillment-service
    ports:
      - "8084:8080"
    networks:
      - warehousing-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_NAME=fulfillment_service
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
    depends_on:
      - eureka-server
      - postgres
      - redis
      - inventory-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  billing-service:
    build: ./billing-service
    container_name: warehousing-billing-service
    ports:
      - "8085:8080"
    networks:
      - warehousing-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_NAME=billing_service
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
    depends_on:
      - eureka-server
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Analytics and Reporting
  warehouse-analytics:
    build: ./warehouse-analytics
    container_name: warehousing-analytics-service
    ports:
      - "8086:8080"
    networks:
      - warehousing-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_NAME=warehouse_analytics
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
    depends_on:
      - eureka-server
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Self Storage Service with Embedded Frontend Apps
  self-storage-service:
    build: ./self-storage-service
    container_name: warehousing-self-storage-service
    ports:
      - "8087:8080"
    networks:
      - warehousing-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
    depends_on:
      - eureka-server
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Self Storage Frontend Apps (Embedded)
  self-storage-mobile-app:
    build: ./self-storage-service/frontend/mobile-app
    container_name: warehousing-self-storage-mobile-app
    ports:
      - "3003:80"
    networks:
      - warehousing-network
    environment:
      - REACT_APP_API_URL=http://localhost:8087
    depends_on:
      - self-storage-service

  self-storage-web-portal:
    build: ./self-storage-service/frontend/web-portal
    container_name: warehousing-self-storage-web-portal
    ports:
      - "3004:80"
    networks:
      - warehousing-network
    environment:
      - REACT_APP_API_URL=http://localhost:8087
    depends_on:
      - self-storage-service

  # Cross Region Services
  cross-region-logistics-service:
    build: ./cross-region-logistics-service
    container_name: warehousing-logistics-service
    ports:
      - "8088:8080"
    networks:
      - warehousing-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - DB_HOST=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - REDIS_HOST=redis
    depends_on:
      - eureka-server
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Admin Interfaces
  global-hq-admin:
    build: ./global-hq-admin
    container_name: warehousing-global-hq-admin
    ports:
      - "3000:80"
    networks:
      - warehousing-network
    environment:
      - REACT_APP_API_URL=http://localhost:8082
    depends_on:
      - warehouse-management-service

  regional-admin:
    build: ./regional-admin
    container_name: warehousing-regional-admin
    ports:
      - "3001:80"
    networks:
      - warehousing-network
    environment:
      - REACT_APP_API_URL=http://localhost:8082
    depends_on:
      - warehouse-management-service

  staff-mobile-app:
    build: ./staff-mobile-app
    container_name: warehousing-staff-mobile-app
    ports:
      - "3002:80"
    networks:
      - warehousing-network
    environment:
      - REACT_APP_API_URL=http://localhost:8082
    depends_on:
      - warehouse-management-service

volumes:
  postgres_data:
  redis_data:

networks:
  warehousing-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
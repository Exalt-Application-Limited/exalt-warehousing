name: Warehousing CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'warehousing/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'warehousing/**'

env:
  REGISTRY: ghcr.io
  JAVA_VERSION: '17'
  NODE_VERSION: '18'

jobs:
  # Java Services Build and Test
  java-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'billing-service', 'central-configuration-test', 'config-server-enterprise',
          'cross-region-logistics-service', 'fulfillment-service', 'inventory-service',
          'self-storage-service', 'warehouse-analytics', 'warehouse-management-service',
          'warehouse-onboarding', 'warehouse-operations', 'warehouse-subscription',
          'warehousing-production', 'warehousing-shared', 'warehousing-staging'
        ]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
    
    - name: Build ${{ matrix.service }}
      working-directory: warehousing/${{ matrix.service }}
      run:  < /dev/null | 
        mvn clean compile -DskipTests
        mvn package -DskipTests
    
    - name: Test ${{ matrix.service }}
      working-directory: warehousing/${{ matrix.service }}
      run: |
        mvn test -Dspring.profiles.active=test
      continue-on-error: true
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      if: github.event_name \!= 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Build and push Docker image
      if: github.event_name \!= 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: warehousing/${{ matrix.service }}
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/warehousing-${{ matrix.service }}:latest
          ${{ secrets.DOCKER_USERNAME }}/warehousing-${{ matrix.service }}:${{ github.sha }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Node.js Services Build and Test  
  nodejs-services:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'global-hq-admin', 'regional-admin', 'staff-mobile-app'
        ]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: warehousing/${{ matrix.service }}/package-lock.json
    
    - name: Install dependencies
      working-directory: warehousing/${{ matrix.service }}
      run: npm ci --legacy-peer-deps
    
    - name: Build ${{ matrix.service }}
      working-directory: warehousing/${{ matrix.service }}
      run: |
        if [ -f "package.json" ] && grep -q "build" package.json; then
          npm run build
        fi
      continue-on-error: true

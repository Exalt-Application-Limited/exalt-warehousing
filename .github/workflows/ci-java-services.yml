name: CI - Java Services

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.java'
      - '**/pom.xml'
      - '.github/workflows/ci-java-services.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.java'
      - '**/pom.xml'
      - '.github/workflows/ci-java-services.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - billing-service
          - config-server-enterprise
          - cross-region-logistics-service
          - fulfillment-service
          - inventory-service
          - self-storage-service
          - warehouse-analytics
          - warehouse-management-service
          - warehouse-onboarding
          - warehouse-operations
          - warehouse-subscription
          - warehousing-production
          - warehousing-shared
          - warehousing-staging
          - shared-infrastructure-test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build parent POM
      run: mvn clean install -N
    
    - name: Build and test ${{ matrix.service }}
      run: |
        cd ${{ matrix.service }}
        mvn clean compile test
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.service }}
        path: ${{ matrix.service }}/target/surefire-reports/
        retention-days: 7
    
    - name: Generate code coverage
      run: |
        cd ${{ matrix.service }}
        mvn jacoco:report
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        directory: ${{ matrix.service }}/target/site/jacoco/
        flags: ${{ matrix.service }}
        name: ${{ matrix.service }}-coverage

  sonar-analysis:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    - name: Analyze with SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn verify sonar:sonar \
          -Dsonar.projectKey=exalt-warehousing \
          -Dsonar.organization=exalt \
          -Dsonar.host.url=https://sonarcloud.io
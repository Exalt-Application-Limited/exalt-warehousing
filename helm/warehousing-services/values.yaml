# Default values for warehousing-services
global:
  imageRegistry: ghcr.io
  imagePullSecrets: []
  storageClass: "gp3"
  
# Common configuration
common:
  labels:
    ecosystem: social-ecommerce
    domain: warehousing
  
# Inventory Service Configuration
inventoryService:
  enabled: true
  replicaCount: 3
  image:
    repository: exalt/inventory-service
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8082
    metricsPort: 8090
  
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  env:
    SPRING_PROFILES_ACTIVE: "kubernetes"
    JAVA_OPTS: "-Xms512m -Xmx900m -XX:+UseG1GC"

# Warehouse Management Service Configuration
warehouseManagement:
  enabled: true
  replicaCount: 2
  image:
    repository: exalt/warehouse-management-service
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8086
    metricsPort: 8096
  
  resources:
    limits:
      cpu: 1500m
      memory: 1.5Gi
    requests:
      cpu: 400m
      memory: 768Mi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

# Warehouse Analytics Configuration
warehouseAnalytics:
  enabled: true
  replicaCount: 2
  image:
    repository: exalt/warehouse-analytics
    tag: latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 8087
    metricsPort: 8097
  
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 85

# Database Configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "changeme"
    database: "warehousing"
  primary:
    persistence:
      enabled: true
      size: 50Gi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# Redis Configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: "changeme"
  master:
    persistence:
      enabled: true
      size: 10Gi
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: 10Gi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# Elasticsearch Configuration
elasticsearch:
  enabled: true
  master:
    replicaCount: 3
    persistence:
      enabled: true
      size: 20Gi
  data:
    replicaCount: 2
    persistence:
      enabled: true
      size: 50Gi
  coordinating:
    replicaCount: 2
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# Ingress Configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: api.warehousing.example.com
      paths:
        - path: /inventory
          pathType: Prefix
          backend:
            service:
              name: inventory-service
              port:
                number: 8082
        - path: /warehouse
          pathType: Prefix
          backend:
            service:
              name: warehouse-management-service
              port:
                number: 8086
        - path: /analytics
          pathType: Prefix
          backend:
            service:
              name: warehouse-analytics
              port:
                number: 8087
  tls:
    - secretName: warehousing-tls
      hosts:
        - api.warehousing.example.com

# ServiceMonitor for Prometheus
serviceMonitor:
  enabled: true
  namespace: monitoring
  interval: 30s
  scrapeTimeout: 10s

# Network Policies
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress

# Pod Security Policy
podSecurityPolicy:
  enabled: false
  
# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1
  maxUnavailable: null
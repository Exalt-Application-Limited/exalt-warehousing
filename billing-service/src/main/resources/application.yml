spring:
  application:
    name: warehousing-billing-service
  
  profiles:
    active: development
    
  datasource:
    url: jdbc:postgresql://localhost:5432/warehousing_billing_db
    username: ${DB_USERNAME:warehousing_user}
    password: ${DB_PASSWORD:warehousing_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: billing-service-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "com.ecosystem.warehousing.billing"
  
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour
      cache-null-values: false
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080/auth/realms/warehousing}

server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /api/v1/billing
  error:
    include-message: always
    include-binding-errors: always

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,beans,env
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    groups-order: DESC
    operations-sorter: method
    disable-swagger-default-url: true
    use-root-path: true

# Logging
logging:
  level:
    com.ecosystem.warehousing.billing: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/billing-service.log

# Application specific configuration
app:
  billing:
    currency:
      default: USD
      supported: USD,EUR,GBP,CAD,AUD,JPY,CNY,SEK,NOK,DKK,CHF,PLN,CZK,HUF,RON,BGN,HRK,RSD,BAM,MKD,ALL,TRY,RUB,UAH,BYN,MDL,GEL,AZN,KZT,UZS,TJS,KGS,TMT,AFN,PKR,INR,BDT,LKR,NPR,BTN,MVR,THB,LAK,MMK,KHR,VND,IDR,MYR,BND,SGD,PHP,MNT,KRW,TWD,HKD,MOP,CNH,JPY,XAF,XOF,MAD,TND,DZD,LYD,EGP,SDG,ETB,ERN,DJF,SOS,UGX,KES,TZS,RWF,BIF,MWK,ZMW,AOA,BWP,SZL,LSL,ZAR,NAD,MZN,MGA,MUR,SCR,KMF
    tax:
      enabled: true
      default-rate: 0.20 # 20% VAT
    invoice:
      prefix: WH-INV
      auto-generate: true
    subscription:
      grace-period-days: 7
      reminder-days: [7, 3, 1]
    commission:
      default-rate: 0.05 # 5%
      minimum-amount: 1.00
    payment:
      retry-attempts: 3
      retry-delay-minutes: [15, 60, 240]

# Feign Client Configuration
feign:
  compression:
    request:
      enabled: true
    response:
      enabled: true
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 10000
  hystrix:
    enabled: true

# External Service URLs
external:
  services:
    currency-service: ${CURRENCY_SERVICE_URL:http://localhost:8082}
    tax-service: ${TAX_SERVICE_URL:http://localhost:8083}
    payment-service: ${PAYMENT_SERVICE_URL:http://localhost:8084}
    notification-service: ${NOTIFICATION_SERVICE_URL:http://localhost:8085}

---
spring:
  config:
    activate:
      on-profile: development
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
logging:
  level:
    root: INFO
    com.ecosystem.warehousing.billing: DEBUG

---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true

---
spring:
  config:
    activate:
      on-profile: production
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
logging:
  level:
    root: WARN
    com.ecosystem.warehousing.billing: INFO
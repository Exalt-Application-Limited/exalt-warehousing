spring:
  application:
    name: cross-region-logistics-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/logistics_db}
    username: ${DATABASE_USER:logistics_user}
    password: ${DATABASE_PASSWORD:logistics_pass}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: logistics-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.ecosystem.warehousing.*"
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
  cloud:
    config:
      uri: ${CONFIG_SERVER_URL:http://localhost:8888}
      fail-fast: false

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
  instance:
    preferIpAddress: true

server:
  port: ${SERVER_PORT:8087}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true

# Cross-Region Logistics Service Specific Configuration
logistics:
  kafka:
    topics:
      transfer-events: transfer-events
      inventory-sync: inventory-sync
      warehouse-events: warehouse-events
  transfer:
    approval:
      auto-approve-threshold: 100 # Auto-approve transfers with items < 100
      require-manager-approval: true
    validation:
      check-inventory: true
      check-warehouse-capacity: true
  shipping:
    route:
      optimization:
        enabled: true
        algorithm: SHORTEST_PATH # Options: SHORTEST_PATH, LOWEST_COST, FASTEST
    carriers:
      inter-warehouse:
        - name: DHL_FREIGHT
        - name: UPS_FREIGHT
        - name: FEDEX_FREIGHT

# Feign Client Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
      inventory-service:
        url: ${INVENTORY_SERVICE_URL:http://inventory-service:8084}
      warehouse-service:
        url: ${WAREHOUSE_SERVICE_URL:http://warehouse-management-service:8086}
